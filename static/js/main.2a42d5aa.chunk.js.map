{"version":3,"sources":["components/Section.js","components/FeedbackOption.js","components/Statistics.js","components/Notification.js","components/Container.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","id","style","marginRight","type","onClick","name","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Container","App","state","props","initialValue","varietyOfFeedback","e","reaction","target","setState","prevState","countTotalFeedback","this","Math","round","countPositiveFeedbackPercentage","FeedbackOption","onleaveFeedback","Object","keys","React","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAeeA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,gCACI,6BAAKD,IACJC,MCoBMC,EAvBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OAEpB,cAAC,EAAD,CAASJ,MAAM,wBAAf,SAEI,8BACKG,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACb,wBACIC,MAAQ,CACJC,YAAa,OAGjBC,KAAK,SAELC,QAASP,EACTQ,KAAMN,EARV,SAUEA,GANOC,WCCNM,EAXI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OAEf,eAAC,EAAD,CAASlB,MAAM,aAAf,UACI,uCAAUc,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCHOC,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAEjB,4BAAIA,KCCOC,EAHG,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAH,OACd,8BAAMA,KCMJqB,E,4MAYJC,MAAQ,CACJT,KAAM,EAAKU,MAAMC,aACjBV,QAAS,EAAKS,MAAMC,aACpBT,IAAK,EAAKQ,MAAMC,c,EAGpBC,kBAAoB,SAACC,GACjB,IAAOC,EAAYD,EAAEE,OAAdD,SACP,EAAKE,UAAS,SAACC,GAAD,sBACTH,EAAWG,EAAUH,GAAY,O,EAK1CI,mBAAqB,WACjB,MAA6B,EAAKT,MAClC,OADA,EAAOT,KAAP,EAAaC,QAAb,EAAsBC,K,qEAI1B,WACI,IAAQF,EAASmB,KAAKV,MAAdT,KACR,OAAOoB,KAAKC,MAAOrB,EAAOmB,KAAKD,qBAAwB,O,oBAG3D,WAEI,MAA6BC,KAAKV,MAA3BT,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAChBC,EAAQgB,KAAKD,qBACbd,EAAqBe,KAAKG,kCAChC,OAEM,eAAC,EAAD,WAEI,cAACC,EAAD,CACIC,gBAAmBL,KAAKP,kBACxBvB,QAAWoC,OAAOC,KAAKP,KAAKV,SAKpB,IAAVN,EACE,cAAC,EAAD,CAAcG,QAAQ,sBAKlB,cAAC,EAAD,CACAN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,W,GA/D1BuB,IAAMC,WAAlBpB,EAEGqB,aAAe,CAClBlB,aAAc,GAwELH,QC/EfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a42d5aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div>\r\n        <h1>{title}</h1>\r\n        {children}\r\n    </div>\r\n);\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n};\r\n    \r\nexport default Section;","import React from 'react';\r\nimport Section from './Section';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n    \r\n    <Section title=\"Please leave feedback\">\r\n        \r\n        <div>\r\n            {options.map((option, id) => \r\n            <button\r\n                style ={{\r\n                    marginRight: '5px'\r\n                }}\r\n                key={id}            \r\n                type=\"button\"\r\n                \r\n                onClick={onLeaveFeedback}\r\n                name={option}\r\n                \r\n            >{option}</button>)}\r\n                        \r\n        </div>\r\n    </Section>\r\n    \r\n);\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport Section from \"./Section\";\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage }) => (\r\n    \r\n    <Section title=\"Statistics\">\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n    </Section>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nconst Notification = ({ message })=>(    \r\n    \r\n    <p>{message}</p>\r\n)\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Container = ({ children }) =>\r\n    <div>{children}</div>\r\n    \r\nexport default Container;","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from \"./components/FeedbackOption\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\nimport Container from \"./components/Container\";\n\n\nclass App extends React.Component {\n\n  static defaultProps = {\n      initialValue: 0,\n  };\n\n  static propTypes = {\n      good: PropTypes.number,\n      neutral: PropTypes.number,\n      bad: PropTypes.number\n  };\n\n  state = {\n      good: this.props.initialValue,\n      neutral: this.props.initialValue,\n      bad: this.props.initialValue\n  };\n\n  varietyOfFeedback = (e) => {\n      const {reaction} = e.target;\n      this.setState((prevState) => ({\n          [reaction]: prevState[reaction] + 1,\n    }));\n  }\n\n\n  countTotalFeedback = () => {\n      const {good, neutral, bad} = this.state;\n      return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage() {\n      const { good } = this.state;\n      return Math.round((good / this.countTotalFeedback()) * 100);\n  };\n\n  render () {\n      \n      const {good, neutral, bad} = this.state; \n      const total = this.countTotalFeedback();\n      const positivePercentage = this.countPositiveFeedbackPercentage();       \n      return (\n          \n            <Container>\n                 \n                <FeedbackOptions  \n                    onleaveFeedback = {this.varietyOfFeedback}\n                    options = {Object.keys(this.state)}\n                    \n                />\n                  \n                \n                 {total === 0 ?  (\n                    <Notification message=\"No feedback given\"\n                />\n                \n                    ) : (\n                        \n                        <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={total}\n                        positivePercentage={positivePercentage}\n                    />   \n                \n                    )\n                }   \n            \n            </Container>\n        )\n    };\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}